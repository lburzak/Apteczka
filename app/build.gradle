import groovy.xml.MarkupBuilder

apply from: 'network_properties.gradle'

apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.github.polydome.apteczka"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "REMEDY_URL", "\"$remedyUrl\""
        }

        debug {
            buildConfigField "String", "REMEDY_URL", "\"$remedyUrl\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE*.md'
    }

    buildFeatures {
        viewBinding = true
    }

    // ViewBinding fails during compilation without this. Probably affects only Java.
    dataBinding {
        enabled true
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group.equals("com.squareup.okhttp3")) {
            details.useVersion "3.12.12"
            details.because "Android <4.4 devices are unsupported on later versions"
        }
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    def room_version = "2.2.5"

    implementation project(":domain")
    implementation project(":data")
    implementation project(":network")
    implementation project(":barcode-scanner")

    implementation('com.squareup.retrofit2:retrofit:2.9.0')
    implementation("com.squareup.okhttp3:okhttp:3.12.12")
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation "androidx.constraintlayout:constraintlayout:2.0.0"
    implementation "androidx.databinding:databinding-runtime:4.0.1"
    annotationProcessor "androidx.databinding:databinding-compiler:4.0.1"

    implementation 'com.google.android.material:material:1.2.0'

    api 'com.google.dagger:dagger:2.28.3'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.28.3'
    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:2.28.3'

    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:3.4.6'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0-M1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0-M1'

    testImplementation "junit:junit:4.13"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    debugImplementation 'androidx.fragment:fragment-testing:1.2.5'
    androidTestImplementation "androidx.room:room-runtime:$room_version"
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'org.mockito:mockito-core:3.4.6'
    androidTestImplementation 'org.mockito:mockito-android:3.4.6'

    // InstantTaskExecutorRule
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.5'
}

task generateNetworkSecurityConfig() {
    doLast {
        def writer = new StringWriter()
        def xml = new MarkupBuilder(writer)

        xml.with {
            doubleQuotes = true
            mkp.xmlDeclaration(version: "1.0", encoding: "utf-8")

            "network-security-config" {
                "domain-config"(cleartextTrafficPermitted: true) {
                    domain(includeSubdomains: true, remedyHost)
                }
            }
        }

        file("src/main/res/xml/network_security_config.xml").with {
            write(writer.toString())
        }
    }
}